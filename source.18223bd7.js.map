{"version":3,"sources":["utils/random.js","utils/getNode.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/defineProperty.js","components/Pokemon.js","components/Game.js","components/Api.js","index.js"],"names":["random","min","max","Math","ceil","floor","getNode","selector","document","querySelector","Pokemon","id","name","type","img","hp","attacks","game","renderBody","renderHP","renderAttacks","image","playground","body","insertAdjacentHTML","$player","$elHP","$elProgressbar","current","total","damage","innerText","style","width","classList","add","count","callback","endGame","container","createElement","appendChild","i","length","button","dataset","maxCount","player","buttonName","availableClicks","buttonLimit","counter","btnClickLimit","addEventListener","handleAttackClick","bind","start","clicks","end","fn","obj","event","target","lastChild","limit","disabled","renderLog","setPlayersDamage","remove","Game","api","setPlayers","renderPlayers","window","$buttons","querySelectorAll","player1","destroy","player2","getRandomPokemon","render","_this","set","character","enemy","getFight","changeHP","kick","getLog","firstPokemon","secondPokemon","logs","info","log","string","p","insertBefore","children","Api","url","request","fetch","response","json","pokemons","pokemon","attackID","fight","$buttonStart","handleBtnStart","$buttonRestart","handleBtnRestart","restart"],"mappings":"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","file":"source.18223bd7.js","sourceRoot":"../source","sourcesContent":["const random = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\nexport default random;","const getNode = selector => document.querySelector(selector);\n\nexport default getNode;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import getNode from '../utils/getNode.js';\n\nclass Pokemon {\n  constructor({id, name, type, img, hp, selector, attacks, game}) {\n    this.selector = selector;\n    this.id = id;\n    this.name = name;\n    this.image = img;\n    this.type = type;\n    this.hp = {\n      current: hp,\n      total: hp\n    };\n    this.attacks = attacks;\n    this.game = game;\n  };\n\n  render = () => {\n    this.renderBody();\n    this.renderHP();\n    this.renderAttacks();\n  };\n\n  renderBody = () => {\n    const {selector, name, image} = this;\n    const playground = getNode('#playground');\n\n    const body = `\n      <div class=\"pokemon\" id=\"${selector}\">\n        <div class=\"pokemon__inner ${selector}\">\n          <span class=\"lvl\">Lv. 1</span>\n          <img src=\"${image}\" class=\"sprite\" id=\"image\">\n          <div class=\"details\">\n            <h2 class=\"name\" id=\"name\">${name}</h2>\n            <div class=\"hp\">\n              <div class=\"bar\">\n                <div class=\"health\" id=\"progressbar\"></div>\n              </div>\n              <span class=\"text\" id=\"health\"></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n\n    playground.insertAdjacentHTML('beforeend', body);\n\n    this.$player = getNode(`#${selector}`);\n    this.$elHP = this.$player.querySelector('#health');\n    this.$elProgressbar = this.$player.querySelector('#progressbar');\n  };\n\n  renderHP = () => {\n    const {hp: {current, total}, $elHP, $elProgressbar} = this;\n    const damage = current / total * 100;\n\n    $elHP.innerText = current + ' / ' + total;\n    $elProgressbar.style.width =  damage + '%';\n\n    switch(true) {\n      case (damage < 60 && damage > 20):\n        $elProgressbar.classList.add('low');\n        break;\n      case (damage < 20):\n        $elProgressbar.classList.add('critical');\n        break;\n    };\n  };\n\n  changeHP = (count, callback) => {\n    let endGame = false;\n\n    this.hp.current -= count;\n\n    if (this.hp.current <= 0) {\n      this.hp.current = 0;\n      endGame = true;\n    };\n\n    this.renderHP();\n    callback && callback(count);\n\n    return endGame;\n  };\n\n  renderAttacks = () => {\n    const {name, attacks} = this;\n\n    const container = document.createElement('div');\n    container.classList.add('pokemon__attacks');\n    container.id = this.selector + name;\n    this.$player.appendChild(container);\n\n    for (let i = 0; i < attacks.length; i++) {\n      const button = document.createElement('button');\n      button.classList.add('button', 'pokemon__attacks-button');\n      button.dataset.count = attacks[i].maxCount;\n      button.dataset.name = attacks[i].name;\n      button.dataset.id = attacks[i].id;\n      button.dataset.player = this.selector;\n  \n      const buttonName = document.createElement('span');\n      buttonName.innerText = attacks[i].name;\n      button.appendChild(buttonName);\n\n      const availableClicks = document.createElement('span');\n      availableClicks.dataset.buttonLimit = true;\n      availableClicks.classList.add('limit');\n      availableClicks.innerText = `Available clicks: ${attacks[i].maxCount}`;\n      button.appendChild(availableClicks);\n\n      container.appendChild(button);\n\n      const counter = btnClickLimit(attacks[i].maxCount);\n      button.addEventListener('click', this.handleAttackClick.bind(this, counter, {id: attacks[i].id, count: attacks[i].maxCount}));\n    };\n\n    function btnClickLimit(max) {\n      let start = 0;\n    \n      return function() {\n        ++start\n\n        return {\n          clicks: start,\n          end: start >= max\n        };\n      };\n    };\n  };\n\n  handleAttackClick = (fn, obj, event) => {\n    const button = event.target;\n    const buttonLimit = button.lastChild;\n    const limit = fn();\n  \n    if (limit.end) {\n      button.disabled = true;\n    };\n  \n    buttonLimit.innerText = `Available clicks: ${obj.count - limit.clicks}`;\n\n    game.renderLog(`${button.dataset.name} clicks: ${limit.clicks}/${obj.count}`);\n\n    this.game.setPlayersDamage(this, obj.id);\n  };\n\n  destroy = () => {\n    this.$player.remove();\n  };\n}\n\nexport default Pokemon;","import getNode from '../utils/getNode.js';\nimport random from '../utils/random.js';\n\nimport Pokemon from './Pokemon.js';\n\nclass Game {\n  constructor(api) {\n    this.api = api;\n    this.renderLog('Welcome to Game!');\n  };\n\n  start = async () => {\n    this.renderLog('Loading...');\n\n    await this.setPlayers();\n\n    this.renderLog('Start Game!');\n    this.renderPlayers();\n\n    window.game = this;\n  };\n\n  end = (player, callback) => {\n    const $buttons = document.querySelectorAll('.pokemon__attacks-button');\n\n    for (let i = 0; i < $buttons.length; i++) {\n      $buttons[i].disabled = true;\n    };\n\n    player && this.renderLog(player + ' lost!');\n    this.renderLog('Game over!');\n\n    callback && callback();\n  };\n\n  restart = async () => {\n    this.renderLog('Restart Game!');\n\n    this.player1.destroy();\n    this.player2.destroy();\n\n    await this.setPlayers();\n    this.renderPlayers();\n  };\n\n  setPlayers = async () => {\n    const player1 = await this.api.getRandomPokemon();\n    const player2 = await this.api.getRandomPokemon();\n\n    this.player1 = new Pokemon({\n      ...player1,\n      game: this,\n      selector: 'player1'\n    });\n    this.player2 = new Pokemon({\n      ...player2,\n      game: this,\n      selector: 'player2'\n    });\n\n    window.player1 = this.player1;\n    window.player2 = this.player2;\n  };\n\n  renderPlayers = () => {\n    this.player1.render();\n    this.player2.render();\n  };\n  \n  setPlayersDamage = (player, id) => {\n    let damage;\n    const _this = this;\n\n    switch(true) {\n      case (this.player1 === player):\n        set(this.player1, this.player2, id);\n        break;\n      case (this.player2 === player):\n        set(this.player2, this.player1, id);\n        break;\n    };\n\n    async function set(character, enemy, id) {\n      let endGame = false;\n\n      damage = await _this.api.getFight(character.id, id, enemy.id);\n\n      endGame = enemy.changeHP(damage.kick.player2);\n      _this.renderLog(_this.getLog(enemy, character, damage.kick.player2));\n\n      if (endGame) {\n        _this.end(enemy.name);\n        return;\n      };\n\n      endGame = character.changeHP(damage.kick.player1);\n      _this.renderLog(_this.getLog(character, enemy, damage.kick.player1));\n\n      if (endGame) {\n        _this.end(character.name);\n        return;\n      };\n    };\n  };\n\n  getLog = (firstPokemon, secondPokemon, count) => {\n    const logs = [\n      `${firstPokemon.name} вспомнил что-то важное, но неожиданно ${secondPokemon.name}, не помня себя от испуга, ударил в предплечье врага.`,\n      `${firstPokemon.name} поперхнулся, и за это ${secondPokemon.name} с испугу приложил прямой удар коленом в лоб врага.`,\n      `${firstPokemon.name} забылся, но в это время наглый ${secondPokemon.name}, приняв волевое решение, неслышно подойдя сзади, ударил.`,\n      `${firstPokemon.name} пришел в себя, но неожиданно ${secondPokemon.name} случайно нанес мощнейший удар.`,\n      `${firstPokemon.name} поперхнулся, но в это время ${secondPokemon.name} нехотя раздробил кулаком \\<вырезанно цензурой\\> противника.`,\n      `${firstPokemon.name} удивился, а ${secondPokemon.name} пошатнувшись влепил подлый удар.`,\n      `${firstPokemon.name} высморкался, но неожиданно ${secondPokemon.name} провел дробящий удар.`,\n      `${firstPokemon.name} пошатнулся, и внезапно наглый ${secondPokemon.name} беспричинно ударил в ногу противника.`,\n      `${firstPokemon.name} расстроился, как вдруг, неожиданно ${secondPokemon.name} случайно влепил стопой в живот соперника.`,\n      `${firstPokemon.name} пытался что-то сказать, но вдруг, неожиданно ${secondPokemon.name} со скуки, разбил бровь сопернику.`\n      ];\n    \n      const info = ` -${count} [${firstPokemon.hp.current}/${firstPokemon.hp.total}]`;\n      const log =  logs[random(0, logs.length - 1)] + info;\n    \n      return log;\n    };\n\n  renderLog = (string) => {\n    const logs = getNode('#logs');\n    const p = document.createElement('p');\n    p.innerText = '###: ' + string;\n\n    logs.insertBefore(p, logs.children[0]);\n  };\n}\n\nexport default Game;","class Api {\n  constructor(url) {\n    this.pokemons = `${url}/pokemons?`;\n    this.fight = `${url}/fight?`;\n  };\n\n  fetch = async (request) => {\n    const response = await fetch(request);\n    const body = await response.json();\n\n    return body;\n  };\n\n  getPokemons = async () => {\n    const body = await this.fetch(this.pokemons);\n\n    return body;\n  };\n\n  getPokemon = async (pokemon) => {\n    let request = null;\n\n    typeof pokemon === 'number' ? request = `id=${pokemon}` : request = `name=${pokemon}`;\n    const body = await this.fetch(`${this.pokemons}${request}`);\n\n    return body;\n  };\n\n  getRandomPokemon = async () => {\n    const body = await this.fetch(`${this.pokemons}random=true`);\n\n    return body;\n  };\n\n  getFight = async (player1, attackID, player2) => {\n    const body = await this.fetch(`${this.fight}player1id=${player1}&attackId=${attackID}&player2id=${player2}`);\n\n    return body;\n  };\n};\n\nexport default Api;","import random from './utils/random.js';\nimport getNode from './utils/getNode.js';\n\nimport Game from './components/Game.js';\nimport Pokemon from './components/Pokemon.js';\nimport Api from './components/Api.js';\n\nconst api = new Api('https://reactmarathon-api.netlify.app/api');\n\nconst game = new Game(api);\n\nconst $buttonStart = getNode('#start');\n$buttonStart.addEventListener('click', handleBtnStart);\n\nconst $buttonRestart = getNode('#restart');\n$buttonRestart .addEventListener('click', handleBtnRestart);\n\nfunction handleBtnStart() {\n  game.start();\n  this.classList.add('hide');\n  $buttonRestart.classList.remove('hide');\n};\n\nfunction handleBtnRestart() {\n  game.restart();\n};\n\n// function initButtons() {\n//   const $buttons = document.querySelectorAll('.pokemon__attacks-button');\n\n//   for (let i = 0; i < $buttons.length; i++) {\n//     const counter = btnClickLimit($buttons[i].dataset.count);\n//     $buttons[i].addEventListener('click', handleBtnClick.bind(this, counter));\n//   };\n// };\n\n// function btnClickLimit(max) {\n//   let start = 0;\n\n//   return function() {\n//     ++start\n\n//     return {\n//       clicks: start,\n//       end: start >= max\n//     };\n//   };\n// };\n\n// async function handleBtnClick(fn, event) {\n//   const button = event.target;\n//   const buttonLimit = button.lastChild;\n//   const {count, id, player} = button.dataset;\n//   const limit = fn();\n\n//   if (limit.end) {\n//     button.disabled = true;\n//   };\n\n//   buttonLimit.innerText = `Available clicks: ${count - limit.clicks}`;\n\n//   const log = game.renderLog(`${button.dataset.name} clicks: ${limit.clicks}/${count}`);\n\n//   let state = null;\n//   const damage = await api.getFight(player1.id, id, player2.id);\n\n//   switch(player) {\n//     case player1.selector:\n//       state = {\n//         endGame: player2.changeHP(damage.kick.player2),\n//         loserGame: player2.name,\n//         message: game.getLog(player2, player1, damage.kick.player2)\n//       };\n//       break;\n//     case player2.selector:\n//       state = {\n//         endGame: player1.changeHP(damage.kick.player1),\n//         loserGame: player1.name,\n//         message: game.getLog(player1, player2, damage.kick.player1)\n//       };\n//       break;\n//   };\n\n//   player1.changeHP(damage.kick.player1);\n//   player2.changeHP(damage.kick.player2);\n\n//   game.renderLog(state.message);\n\n//   if (state.endGame) {\n//     game.end(state.loserGame);\n//   };\n// };"]}